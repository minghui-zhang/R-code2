}
chosen_onset_types <- c("freq_10_persiann", "rangethres_10_15_15_40_persiann", "rangethres_10_15_30_40_persiann", "freq_12_persiann",
"freq_8_persiann", "rangethres_10_15_20_30_persiann")
for (onset_type in chosen_onset_types) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type,]
results_FE$model_spec = "FE"
results_OLS <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$onset_type == onset_type,]
results_OLS$model_spec = "OLS"
results <- rbind(results_FE, results_OLS)
results <- unite(results, col = "desc", model_type:plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(desc, model_type, plant_stat_type, intensity) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
mean_R2 = mean(R2),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
sd_R2 = sd(R2)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = desc, y = mean_onset_coef, col = model_type, shape = intensity)) +
geom_errorbar(aes(x = desc, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef, col = model_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type)) +
ylim(c(0, 0.7)) +
ylab('onset coef')
print(onset_coef_plot)
}
chosen_onset_types <- c("freq_10_persiann", "rangethres_10_15_15_40_persiann", "rangethres_10_15_30_40_persiann", "freq_12_persiann",
"freq_8_persiann", "rangethres_10_15_20_30_persiann")
for (onset_type in chosen_onset_types) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type,]
results_FE$model_spec = "FE"
results_OLSall <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$onset_type == onset_type,]
results_OLSall$model_spec = "OLS_all"
results_OLSnone <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$onset_type == onset_type,]
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_FE, results_OLSall, results_OLSnone)
results <- unite(results, col = "desc", model_type:plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(desc, model_type, plant_stat_type, intensity) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
mean_R2 = mean(R2),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
sd_R2 = sd(R2)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = desc, y = mean_onset_coef, col = model_type, shape = intensity)) +
geom_errorbar(aes(x = desc, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef, col = model_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type)) +
ylim(c(0, 0.7)) +
ylab('onset coef')
print(onset_coef_plot)
}
chosen_onset_types <- c("freq_10_persiann", "rangethres_10_15_15_40_persiann", "rangethres_10_15_30_40_persiann", "freq_12_persiann",
"freq_8_persiann", "rangethres_10_15_20_30_persiann")
for (onset_type in chosen_onset_types) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type,]
results_FE$model_spec = "FE"
results_OLSall <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$onset_type == onset_type,]
results_OLSall$model_spec = "OLS_all"
results_OLSnone <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$onset_type == onset_type,]
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_FE, results_OLSall, results_OLSnone)
results <- unite(results, col = "desc", model_spec, intensity, plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(desc, model_type, plant_stat_type, intensity) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
mean_R2 = mean(R2),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
sd_R2 = sd(R2)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = desc, y = mean_onset_coef, col = model_type, shape = intensity)) +
geom_errorbar(aes(x = desc, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef, col = model_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type)) +
ylim(c(0, 0.7)) +
ylab('onset coef')
print(onset_coef_plot)
}
chosen_onset_types <- c("freq_10_persiann", "rangethres_10_15_15_40_persiann", "rangethres_10_15_30_40_persiann", "freq_12_persiann",
"freq_8_persiann", "rangethres_10_15_20_30_persiann")
for (onset_type in chosen_onset_types) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type,]
results_FE$model_spec = "FE"
results_OLSall <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$onset_type == onset_type,]
results_OLSall$model_spec = "OLS_all"
results_OLSnone <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$onset_type == onset_type,]
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_FE, results_OLSall, results_OLSnone)
results <- unite(results, col = "desc", model_spec, intensity, plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(desc, model_spec, plant_stat_type, intensity) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
mean_R2 = mean(R2),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
sd_R2 = sd(R2)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = desc, y = mean_onset_coef, col = model_spec, shape = intensity)) +
geom_errorbar(aes(x = desc, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef, col = model_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type)) +
ylim(c(0, 0.7)) +
ylab('onset coef')
print(onset_coef_plot)
}
chosen_onset_types <- c("freq_10_persiann", "rangethres_10_15_15_40_persiann", "rangethres_10_15_30_40_persiann", "freq_12_persiann",
"freq_8_persiann", "rangethres_10_15_20_30_persiann")
for (onset_type in chosen_onset_types) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type,]
results_FE$model_spec = "FE"
results_OLSall <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$onset_type == onset_type,]
results_OLSall$model_spec = "OLS_all"
results_OLSnone <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$onset_type == onset_type,]
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_FE, results_OLSall, results_OLSnone)
results <- unite(results, col = "desc", model_spec, intensity, plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(desc, model_spec, plant_stat_type, intensity) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
mean_R2 = mean(R2),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
sd_R2 = sd(R2)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = desc, y = mean_onset_coef, col = model_spec, shape = intensity)) +
geom_errorbar(aes(x = desc, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef, col = model_spec)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type)) +
ylim(c(0, 0.7)) +
ylab('onset coef')
print(onset_coef_plot)
}
onset_type <- "freq_10_persiann"
for (crop_intensity in c("SC", "DC")) {
for (plant_stat_type in c("median", "percentile25", "percentile5")) {
results_OLSall <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_OLSspaceonly <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "no" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_OLSyearonly <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "yes" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_OLSnone <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_OLSall$model_spec = "OLS_all"
results_OLSspaceonly$model_spec = "OLS_spaceonly"
results_OLSyearonly$model_spec = "OLS_yearonly"
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_OLSall, results_OLSspaceonly, results_OLSyearonly, results_OLSnone)
results <- unite(results, col = "desc", model_spec, intensity, plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(model_spec) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
min_onset_coef = min(onset_coef),
min_onset_coef_stderr = min(onset_coef_stderr),
max_onset_coef = max(onset_coef),
max_onset_coef_stderr = max(onset_coef_stderr)
)
best_onset_plot <- ggplot(results_summary) +
geom_point(aes(x = model_spec, y = mean_onset_coef)) +
geom_point(aes(x = model_spec,y = min_onset_coef), color = "blue") +
geom_point(aes(x = model_spec, y = max_onset_coef), color = "red") +
geom_errorbar(aes(x = model_spec, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type, ",", crop_intensity, ",", plant_stat_type)) +
ylim(c(0, 0.6)) +
ylab('onset coefficient')
print(best_onset_plot)
}
}
results_summary
chosen_onset_types <- c("freq_10_persiann", "rangethres_10_15_15_40_persiann", "rangethres_10_15_30_40_persiann", "freq_12_persiann",
"freq_8_persiann", "rangethres_10_15_20_30_persiann")
for (onset_type in chosen_onset_types) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type,]
results_FE$model_spec = "FE"
results_OLSall <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$onset_type == onset_type,]
results_OLSall$model_spec = "OLS_all"
results_OLSnone <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$onset_type == onset_type,]
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_FE, results_OLSall, results_OLSnone)
results <- unite(results, col = "desc", model_spec, intensity, plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(desc, model_spec, plant_stat_type, intensity) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
mean_R2 = mean(R2),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
sd_R2 = sd(R2)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = desc, y = mean_onset_coef, col = model_spec, shape = intensity)) +
geom_errorbar(aes(x = desc, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef, col = model_spec)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type)) +
ylim(c(0, 0.7)) +
ylab('onset coef')
print(onset_coef_plot)
}
results_summary
onset_type <- "freq_10_persiann"
for (crop_intensity in c("SC", "DC")) {
for (plant_stat_type in c("median", "percentile25", "percentile5")) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_FE$model_spec = "FE"
results_OLSall <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_OLSspaceonly <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "no" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_OLSyearonly <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "yes" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_OLSnone <- all_results[all_results$onset_type == onset_type &
all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$intensity == crop_intensity &
all_results$plant_stat_type == plant_stat_type,]
results_FE$model_spec = "FE"
results_OLSall$model_spec = "OLS_all"
results_OLSspaceonly$model_spec = "OLS_spaceonly"
results_OLSyearonly$model_spec = "OLS_yearonly"
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_FE, results_OLSall, results_OLSspaceonly, results_OLSyearonly, results_OLSnone)
results <- unite(results, col = "desc", model_spec, intensity, plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(model_spec) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
min_onset_coef = min(onset_coef),
min_onset_coef_stderr = min(onset_coef_stderr),
max_onset_coef = max(onset_coef),
max_onset_coef_stderr = max(onset_coef_stderr)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = model_spec, y = mean_onset_coef)) +
geom_point(aes(x = model_spec,y = min_onset_coef), color = "blue") +
geom_point(aes(x = model_spec, y = max_onset_coef), color = "red") +
geom_errorbar(aes(x = model_spec, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste0(onset_type, ", ", crop_intensity, ", ", plant_stat_type)) +
ylim(c(0, 0.6)) +
ylab('onset coefficient')
print(onset_coef_plot)
}
}
View(results_summary)
View(results)
chosen_onset_types <- c("freq_10_persiann", "rangethres_10_15_15_40_persiann", "rangethres_10_15_30_40_persiann", "freq_12_persiann",
"freq_8_persiann", "rangethres_10_15_20_30_persiann")
for (onset_type in chosen_onset_types) {
results_FE <- all_results[all_results$model_type == "FE" &
all_results$onset_type == onset_type,]
results_FE$model_spec = "FE"
results_OLSall <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "yes" &
all_results$year_predictor == "yes" &
all_results$onset_type == onset_type,]
results_OLSall$model_spec = "OLS_all"
results_OLSnone <- all_results[all_results$model_type == "OLS" &
all_results$lat_predictor == "no" &
all_results$year_predictor == "no" &
all_results$onset_type == onset_type,]
results_OLSnone$model_spec = "OLS_none"
results <- rbind(results_FE, results_OLSall, results_OLSnone)
results <- unite(results, col = "desc", model_spec, intensity, plant_stat_type, remove = FALSE)
# group by onset_type and calculate mean, median, min, max and stdev for each onset_type
results_summary <- results %>% group_by(desc, model_spec, plant_stat_type, intensity) %>%
summarize(mean_onset_coef = mean(onset_coef),
mean_onset_coef_stderr = mean(onset_coef_stderr),
mean_R2 = mean(R2),
sd_onset_coef = sd(onset_coef),
sd_onset_coef_stderr = sd(onset_coef_stderr),
sd_R2 = sd(R2)
)
onset_coef_plot <- ggplot(results_summary) +
geom_point(aes(x = desc, y = mean_onset_coef, col = model_spec, shape = intensity)) +
geom_errorbar(aes(x = desc, ymin= mean_onset_coef-sd_onset_coef, ymax=mean_onset_coef+sd_onset_coef, col = model_spec)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle(paste(onset_type)) +
ylim(c(0, 0.7)) +
ylab('onset coef')
print(onset_coef_plot)
}
os_system <- 'mac' # mac for laptop or windows for desktop
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sp)
library(rgdal) # not available for R version 3.3.3
library(rgeos)
library(tmap) # NOT in MAC
library(spdep)
library(pgirmess) # spatial correlelogram
library(sf)
if (os_system == 'windows') {
cell_shp_filename <- 'E:/R-code2/Modeling/data/shp/median_onset_cell'
cell_shp <- readOGR(dsn = cell_shp_filename, layer = 'median_onset_cell_SHP')
}
if (os_system == 'mac') {
#cell_shp_filename <- '~/Documents/R-code2/Modeling/data/shp/median_onset_cell'
cell_shp <- st_read('~/Documents/R-code2/Modeling/data/shp/median_onset_cell/median_onset_cell_SHP.shp')
}
os_system <- 'windows_laptop' # mac for laptop or windows for desktop
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sp)
library(rgdal) # not available for R version 3.3.3
library(rgeos)
library(tmap) # NOT in MAC
library(spdep)
library(pgirmess) # spatial correlelogram
library(sf)
if (os_system == 'windows') {
cell_shp_filename <- 'E:/R-code2/Modeling/data/shp/median_onset_cell'
cell_shp <- readOGR(dsn = cell_shp_filename, layer = 'median_onset_cell_SHP')
}
if (os_system == 'mac') {
#cell_shp_filename <- '~/Documents/R-code2/Modeling/data/shp/median_onset_cell'
cell_shp <- st_read('~/Documents/R-code2/Modeling/data/shp/median_onset_cell/median_onset_cell_SHP.shp')
}
if (os_system == 'windows_laptop') {
cell_shp <- st_read('D:/R-code2/Modeling/data/shp/median_onset_cell')
}
#
View(cell_shp)
# visualize for select years
plot_cell_quantiles <- function(year, var.name) {
cell_year <- cell_shp[cell_shp$year == year, ]
tm_shape(cell_year) + tm_fill(var.name, palette = "Reds", style = "quantile",
title = paste("Quantiles of", var.name, year)) + tm_borders(alpha=.4)
}
plot_cell_data <- function(year, var.name) {
cell_year <- cell_shp[cell_shp$year == year, ]
tm_shape(cell_year) + tm_fill(var.name, palette = "viridis", breaks = seq(from = 0, to = 200, by = 20),
title = paste("DOY of", var.name, year)) + tm_borders(alpha=.4)
}
for (year in 2004:2004) {
#print(plot_cell_quantiles(year, "onset"))
print(plot_cell_data(year, "onset"))
#print(plot_cell_quantiles(year, "DC_plant"))
#print(plot_cell_data(year, "DC_plant"))
#print(plot_cell_quantiles(year, "DC_delay"))
#print(plot_cell_data(year, "DC_delay"))
}
plot_cell_local_moran <- function(year, var.name) {
# source: http://www.spatialanalysisonline.com/An%20Introduction%20to%20Spatial%20Data%20Analysis%20in%20R.pdf
cell_year <- cell_shp[cell_shp$year == year, ]
# eliminate no data cells
cell_year <- cell_year[!is.na(cell_year[[var.name]]),]
neighbors <- poly2nb(cell_year)
# Convert the neighbour data to a listw object
listw <- nb2listw(neighbors, zero.policy = TRUE)
local <- localmoran(x = cell_year[[var.name]], listw = nb2listw(neighbors, style = "W", zero.policy = TRUE))
# binds results to our polygon shapefile
moran.map <- cbind(cell_year, local)
# maps the results
output <- tm_shape(moran.map) + tm_fill(col = "Ii", style = "quantile", title = paste("local moran", var.name, year))
return(output)
}
plot_cell_lisa_cluster <- function(year, var.name) {
# source: http://www.spatialanalysisonline.com/An%20Introduction%20to%20Spatial%20Data%20Analysis%20in%20R.pdf
cell_year <- cell_shp[cell_shp$year == year, ]
# eliminate no data cells
cell_year <- cell_year[!is.na(cell_year[[var.name]]),]
neighbors <- poly2nb(cell_year)
# Convert the neighbour data to a listw object
listw <- nb2listw(neighbors, zero.policy = TRUE)
local <- localmoran(x = cell_year[[var.name]], listw = nb2listw(neighbors, style = "W", zero.policy = TRUE))
# create LISA cluster map
quadrant <- vector(mode="numeric",length=nrow(local))
# centers the variable of interest around its mean
m.plant <- cell_year[[var.name]] - mean(cell_year[[var.name]])
# centers the local Moran's around the mean
m.local <- local[,1] - mean(local[,1], na.rm = TRUE)
# significance threshold
signif <- 0.1
# builds a data quadrant
quadrant[m.plant >0 & m.local>0] <- 4
quadrant[m.plant <0 & m.local<0] <- 1
quadrant[m.plant <0 & m.local>0] <- 2
quadrant[m.plant >0 & m.local<0] <- 3
quadrant[local[,5]>signif] <- 0
# plot in r
brks <- c(0,1,2,3,4)
colors <- c("white","blue",rgb(0,0,1,alpha=0.4),rgb(1,0,0,alpha=0.4),"red")
plot(cell_year,border="lightgray",col=colors[findInterval(quadrant,brks,all.inside=FALSE)], main = paste("LISA cluster", var.name, year))
box()
legend("bottomleft",legend=c("insignificant","low-low","low-high","high-low","high-high"),
fill=colors,bty="n")
}
plot_cell_correlelogram <- function(year, var.name) {
# source: http://www.petrkeil.com/?p=1050
cell_year <- cell_shp[cell_shp$year == year, ]
# eliminate no data cells
cell_year <- cell_year[!is.na(cell_year[[var.name]]),]
# using pgirmess package
# first project from degrees to WGS 84 so distance units are more interpretable... but not used
#cell_2010_km = spTransform(cell_2010, CRS('+init=epsg:5880'))
latlon = data.frame(x = cell_year@data$lon, y = cell_year@data$lat)
z_value = cell_year@data[[var.name]]
pgi.cor <- correlog(coords=latlon, z=z_value, method="Moran", nbclass=21)
plot(pgi.cor[,'dist.class'], pgi.cor[,'coef'], ylab = "Moran's I", xlab = "distance unit (degrees)", main = paste("spatial correlation", var.name, year))
abline(h = 0)
}
for (year in 2004:2014) {
#print(plot_cell_local_moran(year, "onset"))
#print(plot_cell_lisa_cluster(year, "onset"))
#print(plot_cell_correlelogram(year, "onset"))
#print(plot_cell_local_moran(year, "DC_plant"))
#print(plot_cell_lisa_cluster(year, "DC_plant"))
#print(plot_cell_correlelogram(year, "DC_plant"))
#print(plot_cell_local_moran(year, "DC_delay"))
#print(plot_cell_lisa_cluster(year, "DC_delay"))
#print(plot_cell_correlelogram(year, "DC_delay"))
}
