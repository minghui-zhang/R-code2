do_elimyear <- TRUE
cell_reducer <- 10 # the number of cells by this when NOT sampling data and doing elimcell
set.seed(100)
wanted_variables <- c('year', 'lat', 'lon', 'onset', 'region', 'intensity', 'plant', 'cell_ID')
wanted_predictors <- c('year', 'lat', 'onset', 'region') # for ols and rf
wanted_predictors_fe <- c('year', 'onset') # for fe
f <- as.formula(paste('plant ~', paste(wanted_predictors, collapse = " + ")))
f_fe <- as.formula(paste('plant ~', paste(wanted_predictors_fe, collapse = " + ") ))
# NOTE, SEPARATE MODELS FOR EACH PERCENTILE AND INTENSITY
chosen_percentile <- "percentile5"
chosen_grid_size <- 0.75
chosen_intensity <- "DC"
cell_sf <- cell_sf_tidy
cell_df <- cell_sf_tidy
st_geometry(cell_df) <- NULL
cell_df <- cell_df[(cell_df$plant_stat_type == chosen_percentile) & (cell_df$intensity == chosen_intensity), ]
cell_df$region <- as.factor(cell_df$region)
cell_sf <- cell_sf[(cell_sf$plant_stat_type == chosen_percentile)  & (cell_df$intensity == chosen_intensity), ]
# to store prediction results
prediction_error_results <- data.frame(model_type = character(0),
elim_type = character(0),
elim_year = numeric(0),
elim_cell = character(0),
rmse = numeric(0),
error = numeric(0),
lat_offset = numeric(0),
lon_offset = numeric(0))
# random forest: regular validaton, 30% randomly eliminated  ----------------------------------------------
train_indeces <- sample(nrow(cell_df), 0.7*nrow(cell_df), replace = FALSE)
train <- cell_df[train_indeces,]
train_sf <- cell_sf[train_indeces,]
valid <- cell_df[-train_indeces,]
rf_model1 <- randomForest(f, data = train, importance = TRUE, ntree = 600, mtry = 2)
valid$rf_predicted_plant <- predict(rf_model1, valid)
rf_rmse <- rmse(valid$plant, valid$rf_predicted_plant)
rf_error <- mean(valid$rf_predicted_plant - valid$plant)
# save
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('rf'),
elim_type = c('30%'),
elim_year = c(NA),
elim_cell = c(NA),
rmse = c(rf_rmse),
error = c(rf_error),
lat_offset = 0,
lon_offset = 0))
prediction_error_results
# random forest: eliminate year ---------------------------------------------------------------------------
if (do_elimyear) {
for (elim_year in 2004:2014) {
result <- test_elimyear(elim_year, cell_df, cell_sf, f, "rf", grid_size = chosen_grid_size, plant_stat = chosen_percentile)
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('rf'),
elim_type = c('year'),
elim_year = c(elim_year),
elim_cell = c(NA),
rmse = c(result$rmse_elimyear),
error = c(result$error_elimyear),
lat_offset = 0,
lon_offset = 0))
#print(result)
}
}
prediction_error_results
# random forest: eliminate cell -------------------------------------------------------------------------
unique_cells <- unique(cell_df[cell_df$year == 2004, "cell_ID"])
chosen_cells <- sample(unique_cells, length(unique_cells)/cell_reducer, replace = FALSE) # randomly select some unique cells, otherwise too much data
cell_sf_elimcell <- cell_sf[cell_sf$year == 2004 & cell_sf$intensity == "DC" &
cell_sf$cell_ID %in% chosen_cells, ] # to store error values
cell_sf_elimcell$error <- rep(NA, nrow(cell_sf_elimcell))  # to store errors
if (do_elimcell) {
for (elim_cell in chosen_cells) {
result <- test_elimcell(elim_cell, cell_df, cell_sf, model_type = "rf", f, grid_size = chosen_grid_size)
# save
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('rf'),
elim_type = c('cell'),
elim_year = c(NA),
elim_cell = c(elim_cell),
rmse = c(result$rmse_elimcell),
error = c(result$error_elimcell),
lat_offset = 0,
lon_offset = 0))
# for mapping
cell_sf_elimcell[cell_sf_elimcell$cell_ID == elim_cell, "error"] <- result$error_elimcell[1]
}
elimcell_error_map <- ggplot(cell_sf_elimcell) +
geom_sf(aes(fill = error)) +
scale_fill_viridis() +
ggtitle(paste("Random forest prediction error, eliminated individual cell")) +
geom_polygon(data = MT_outline, aes(x = long, y = lat), color = "black", alpha = 0, linetype = 1) +
theme_bw()
print(elimcell_error_map)
}
prediction_error_results
lat_offsets <- numeric(0)
lon_offsets <- numeric(0)
rmses <- numeric(0)
errors <- numeric(0)
for (lat_offset in seq(0, 0.75, by = 0.25)) { # 0 to 1.5
for (lon_offset in seq(0, 0.75, by = 0.25)) { # 0 to 1.5
train_sampled <- get_sampled_data(full_data = train_sf, plant_stat = chosen_percentile, grid_size = chosen_grid_size,
lat_offset = lat_offset, lon_offset = lon_offset, agg_scheme = FALSE,
plot_samples = FALSE, year_oi = 2012) # year_oi is for plotting only
ols_model <- lm(f, data = train_sampled)
rmse <- rmse(valid$plant, predict(ols_model, valid))
error <- mean(predict(ols_model, valid) - valid$plant)
lat_offsets <- c(lat_offsets, lat_offset)
lon_offsets <- c(lon_offsets, lon_offset)
rmses <- c(rmses, rmse)
errors <- c(errors, error)
}
}
# save
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('ols'),
elim_type = c('30%'),
elim_year = c(NA),
elim_cell = c(NA),
rmse = rmses,
error = errors,
lat_offset = lat_offsets,
lon_offset = lon_offsets))
prediction_error_results
if (do_elimyear) {
for (elim_year in 2004:2014) {
result <- test_elimyear(elim_year, cell_df, cell_sf, f, "ols", grid_size = chosen_grid_size, plant_stat = chosen_percentile)
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('ols'),
elim_type = c('year'),
elim_year = c(elim_year),
elim_cell = c(NA),
rmse = c(result$rmse_elimyear),
error = c(result$error_elimyear),
lat_offset = result$lat_offset,
lon_offset = result$lon_offset))
# print(result)
}
}
prediction_error_results
cell_sf_elimcell <- cell_sf[cell_sf$year == 2004 & cell_sf$intensity == "DC" &
cell_sf$cell_ID %in% chosen_cells, ] # to store error values
cell_sf_elimcell$error <- rep(NA, nrow(cell_sf_elimcell))  # to store errors
if (do_elimcell) {
for (elim_cell in chosen_cells) {
result <- test_elimcell(elim_cell, cell_df, cell_sf, model_type = "ols", f, grid_size = chosen_grid_size, plant_stat = chosen_percentile)
# save
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('ols'),
elim_type = c('cell'),
elim_year = c(NA),
elim_cell = c(elim_cell),
rmse = c(result$rmse_elimcell),
error = c(result$error_elimcell),
lat_offset = result$lat_offset,
lon_offset = result$lon_offset))
# print(result)
# for mapping
cell_sf_elimcell[cell_sf_elimcell$cell_ID == elim_cell, "error"] <- result$error_elimcell[1]
}
elimcell_error_map <- ggplot(cell_sf_elimcell) +
geom_sf(aes(fill = error)) +
scale_fill_viridis() +
ggtitle(paste("OLS prediction error, eliminated individual cell")) +
geom_polygon(data = MT_outline, aes(x = long, y = lat), color = "black", alpha = 0, linetype = 1) +
theme_bw()
print(elimcell_error_map)
}
View(prediction_error_results)
# fe validation, elimiante random 30% -----------------------------------------------------------------
train_panel <- pdata.frame(train, index = c("cell_ID"))
fe_model <- plm(f_fe, data =  train_panel, model = "within")
fixed_effects <- fixef(fe_model)
fe_df <- data.frame(fixef_cell_ID = names(fixed_effects), fixef = as.numeric(fixed_effects))
temp <- dplyr::left_join(valid, fe_df, by = c("cell_ID" = "fixef_cell_ID")) # ensures that rows are in same order as valid
# get only the cells that have fixed effects predicted
has_fe_indeces <- which(!is.na(temp$fixef))
prediction <- temp$fixef + fe_model$coefficients['year'] * valid$year +
fe_model$coefficients['onset'] * valid$onset
# get only the cells that have fixed effects predicted
fe_rmse <- rmse(valid$plant[has_fe_indeces], prediction[has_fe_indeces])
fe_error <- mean(prediction[has_fe_indeces] - valid$plant[has_fe_indeces])
# save
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('fe'),
elim_type = c('30%'),
elim_year = c(NA),
elim_cell = c(NA),
rmse = c(fe_rmse),
error = c(fe_error),
lat_offset = 0,
lon_offset = 0))
if (do_elimyear) {
for (elim_year in 2004:2014) {
result <- test_elimyear(elim_year, cell_df, cell_sf, f_fe, "fe", grid_size = chosen_grid_size, plant_stat = chosen_percentile)
prediction_error_results <- rbind(prediction_error_results,
data.frame(model_type = c('fe'),
elim_type = c('year'),
elim_year = c(elim_year),
elim_cell = c(NA),
rmse = c(result$rmse_elimyear),
error = c(result$error_elimyear),
lat_offset = result$lat_offset,
lon_offset = result$lon_offset))
# print(result)
}
}
View(prediction_error_results)
saveRDS(prediction_error_results, paste0("prediction_error_results_", onset_type, ".rds"))
setwd("E:/R-code2/ModelingPaper")
saveRDS(prediction_error_results, paste0("prediction_error_results_", onset_type, ".rds"))
prediction_error_results$intensity <- chosen_intensity
prediction_error_results$percentile <- chosen_percentile
saveRDS(prediction_error_results, paste0("prediction_error_results_", onset_type, ".rds"))
View(prediction_error_results)
saveRDS(prediction_error_results, paste0("prediction_error_results_", onset_type, '_', chosen_intensity, '_', chosen_percentile, ".rds"))
imported_prediction_error <- readRDS('prediction_error_results_freq_10_persiann_DC_percentile5.rds')
# rmse vs eliminated year, summarized for different intensities and percentiles and sampling grid locations
elimyear_results <- imported_prediction_error_results[imported_prediction_error_results$elim_type == "year",]
imported_prediction_error <- readRDS('prediction_error_results_freq_10_persiann_DC_percentile5.rds')
# rmse vs eliminated year, summarized for different intensities and percentiles and sampling grid locations
elimyear_results <- imported_prediction_error[imported_prediction_error$elim_type == "year",]
elimyear_results
elimyear_rf_fe <- elimyear_results[elimyear_results$model_type == c('rf', 'fe'),]
elimyear_rf_fe
elimyear_rf <- elimyear_results[elimyear_results$model_type == 'rf',]
elimyear_fe <- elimyear_results[elimyear_results$model_type == 'fe',]
elimyear_rf
elimyear_ols <- elimyear_results[elimyear_results$model_type == 'ols',]
elimyear_ols %>% group_by('elim_year') %>% summarize(mean_error = mean(error))
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
summarize(mean_error = mean(error))
summarized_elimyear_ols
elimyear_ols
elimyear_ols$elim_year_factor <- as.factor(elimyear_ols$elim_year)
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year_factor) %>%
summarize(mean_error = mean(error))
summarized_elimyear_ols
head(elimyear_ols)
elimyear_ols$elim_year_factor <- as.factor(elimyear_ols$elim_year)
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year_factor) %>%
plyr::summarize(mean_error = mean(error))
summarized_elimyear_ols
elimyear_ols$elim_year_factor <- as.factor(elimyear_ols$elim_year)
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year_factor) %>%
dplyr::summarize(mean_error = mean(error))
summarized_elimyear_ols
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
dplyr::summarize(mean_error = mean(error))
summarized_elimyear_ols
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
dplyr::summarize(error_mean = mean(error),
error_sd = sd(error),
rmse_mean = mean(rmse),
rmse_sd = sd(rmse))
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
dplyr::summarize(error_mean = mean(error),
error_sd = sd(error),
rmse_mean = mean(rmse),
rmse_sd = sd(rmse)) %>%
mutate(model_type = 'ols')
summarized_elimyear_ols
elimyear_rf_fe <- elimyear_results[elimyear_results$model_type == 'rf' | elimyear_results$model_type == 'fe',]
elimyear_rf_fe
elimyear_rf_fe <- elimyear_results[elimyear_results$model_type == 'rf' | elimyear_results$model_type == 'fe',]
elimyear_rf_fe <- elimyear_rf_fe[, c('model_type', 'rmse', 'error')]
elimyear_rf_fe$rmse_sd <- 0
elimyear_rf_fe$error_sd <- 0
elimyear_rf_fe
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
summarized_elimyear_ols
colnames(elimyear_rf_fe) <- c('model_type', 'rmse_mean', 'error_mean', 'rmse_sd', 'rmse_sd')
rbind(elimyear_rf_fe, summarized_elimyear_ols)
colnames(elimyear_rf_fe)
imported_prediction_error <- readRDS('prediction_error_results_freq_10_persiann_DC_percentile5.rds')
# rmse vs eliminated year, summarized for different intensities and percentiles and sampling grid locations
elimyear_results <- imported_prediction_error[imported_prediction_error$elim_type == "year",]
elimyear_rf_fe <- elimyear_results[elimyear_results$model_type == 'rf' | elimyear_results$model_type == 'fe',]
elimyear_rf_fe <- elimyear_rf_fe[, c('elim_year', 'rmse', 'error')]
elimyear_rf_fe$rmse_sd <- 0
elimyear_rf_fe$error_sd <- 0
elimyear_rf_fe$model_type <- elimyear_rf_fe$model_type
colnames(elimyear_rf_fe) <- c('elim_year', 'rmse_mean', 'error_mean', 'rmse_sd', 'rmse_sd', 'model_type')
elimyear_ols <- elimyear_results[elimyear_results$model_type == 'ols',]
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
elimyear_rf_fe
imported_prediction_error <- readRDS('prediction_error_results_freq_10_persiann_DC_percentile5.rds')
# rmse vs eliminated year, summarized for different intensities and percentiles and sampling grid locations
elimyear_results <- imported_prediction_error[imported_prediction_error$elim_type == "year",]
elimyear_rf_fe <- elimyear_results[elimyear_results$model_type == 'rf' | elimyear_results$model_type == 'fe',]
summarized_elimyear_rf_fe <- elimyear_rf_fe[, c('elim_year', 'rmse', 'error')]
summarized_elimyear_rf_fe$rmse_sd <- 0
summarized_elimyear_rf_fe$error_sd <- 0
summarized_elimyear_rf_fe$model_type <- elimyear_rf_fe$model_type
colnames(summarized_elimyear_rf_fe) <- c('elim_year', 'rmse_mean', 'error_mean', 'rmse_sd', 'rmse_sd', 'model_type')
elimyear_ols <- elimyear_results[elimyear_results$model_type == 'ols',]
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
summarized_elimyear_ols
summarized_elimyear_rf_fe
summarized_elimyear <- rbind(summarized_elimyear_rf_fe, summarized_elimyear_ols)
ggplot(summarized_elimyear, aes(x = elim_year, y = rmse_mean, col = model_type)) +
geom_line() +
ggtitle('eliminated year, rmse') +
theme_bw()
colnames(summarized_elimyear_ols)
colnames(summarized_elimyear_rf_fe)
imported_prediction_error <- readRDS('prediction_error_results_freq_10_persiann_DC_percentile5.rds')
# rmse vs eliminated year, summarized for different intensities and percentiles and sampling grid locations
elimyear_results <- imported_prediction_error[imported_prediction_error$elim_type == "year",]
elimyear_rf_fe <- elimyear_results[elimyear_results$model_type == 'rf' | elimyear_results$model_type == 'fe',]
summarized_elimyear_rf_fe <- elimyear_rf_fe[, c('elim_year', 'rmse', 'error')]
summarized_elimyear_rf_fe$rmse_sd <- 0
summarized_elimyear_rf_fe$error_sd <- 0
summarized_elimyear_rf_fe$model_type <- elimyear_rf_fe$model_type
colnames(summarized_elimyear_rf_fe) <- c('elim_year', 'rmse_mean', 'error_mean', 'rmse_sd', 'error_sd', 'model_type')
elimyear_ols <- elimyear_results[elimyear_results$model_type == 'ols',]
summarized_elimyear_ols <- elimyear_ols %>%
group_by(elim_year) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
summarized_elimyear <- rbind(summarized_elimyear_rf_fe, summarized_elimyear_ols)
ggplot(summarized_elimyear, aes(x = elim_year, y = rmse_mean, col = model_type)) +
geom_line() +
ggtitle('eliminated year, rmse') +
theme_bw()
ggplot(summarized_elimyear, aes(x = elim_year, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=.2, position=position_dodge(.9))
ggtitle('eliminated year, rmse') +
theme_bw()
ggplot(summarized_elimyear, aes(x = elim_year, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=.2, position=position_dodge(.9)) +
ggtitle('eliminated year, rmse') +
theme_bw()
ggplot(summarized_elimyear, aes(x = elim_year, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=0.2) +
ggtitle('eliminated year, rmse') +
theme_bw()
ggplot(summarized_elimyear, aes(x = elim_year, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=0) +
ggtitle('eliminated year, rmse') +
theme_bw()
ggplot(summarized_elimyear, aes(x = elim_year, y = error_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=error_mean - error_sd, ymax=error_mean + error_sd), width=0) +
ggtitle('eliminated year, error') +
theme_bw()
elimcell_results <- imported_prediction_error[imported_prediction_error$elim_type == "cell",]
elimcell_results
elimcell_results <- imported_prediction_error[imported_prediction_error$elim_type == "cell",]
elimcell_rf <- elimyear_results[elimyear_results$model_type == 'rf',]
summarized_elimcell_rf <- elimcell_rf_fe[, c('elim_cell', 'rmse', 'error')]
summarized_elimcell_rf$rmse_sd <- 0
summarized_elimcellrf$error_sd <- 0
summarized_elimcell_rf$model_type <- elimcell_rf$model_type
colnames(summarized_elimcell_rf) <- c('elim_cell', 'rmse_mean', 'error_mean', 'rmse_sd', 'error_sd', 'model_type')
elimcell_ols <- elimcell_results[elimcell_results$model_type == 'ols',]
summarized_elimcell_ols <- elimcell_ols %>%
group_by(elim_cell) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
summarized_elimcell <- rbind(summarized_elimcell_rf, summarized_elimcell_ols)
elimcell_results <- imported_prediction_error[imported_prediction_error$elim_type == "cell",]
elimcell_rf <- elimyear_results[elimyear_results$model_type == 'rf',]
summarized_elimcell_rf <- elimcell_rf[, c('elim_cell', 'rmse', 'error')]
summarized_elimcell_rf$rmse_sd <- 0
summarized_elimcellrf$error_sd <- 0
summarized_elimcell_rf$model_type <- elimcell_rf$model_type
colnames(summarized_elimcell_rf) <- c('elim_cell', 'rmse_mean', 'error_mean', 'rmse_sd', 'error_sd', 'model_type')
elimcell_ols <- elimcell_results[elimcell_results$model_type == 'ols',]
summarized_elimcell_ols <- elimcell_ols %>%
group_by(elim_cell) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
summarized_elimcell <- rbind(summarized_elimcell_rf, summarized_elimcell_ols)
ggplot(summarized_elimcell, aes(x = elim_cell, y = rmse, col = model_type)) +
geom_point() +
ggtitle('eliminated cell, rmse') +
theme_bw()
elimcell_results <- imported_prediction_error[imported_prediction_error$elim_type == "cell",]
elimcell_rf <- elimyear_results[elimyear_results$model_type == 'rf',]
summarized_elimcell_rf <- elimcell_rf[, c('elim_cell', 'rmse', 'error')]
summarized_elimcell_rf$rmse_sd <- 0
summarized_elimcellrf$error_sd <- 0
summarized_elimcell_rf$model_type <- elimcell_rf$model_type
colnames(summarized_elimcell_rf) <- c('elim_cell', 'rmse_mean', 'error_mean', 'rmse_sd', 'error_sd', 'model_type')
elimcell_ols <- elimcell_results[elimcell_results$model_type == 'ols',]
elimcell_results <- imported_prediction_error[imported_prediction_error$elim_type == "cell",]
elimcell_rf <- elimyear_results[elimcell_results$model_type == 'rf',]
summarized_elimcell_rf <- elimcell_rf[, c('elim_cell', 'rmse', 'error')]
summarized_elimcell_rf$rmse_sd <- 0
summarized_elimcellrf$error_sd <- 0
elimcell_results <- imported_prediction_error[imported_prediction_error$elim_type == "cell",]
elimcell_rf <- elimyear_results[elimcell_results$model_type == 'rf',]
summarized_elimcell_rf <- elimcell_rf[, c('elim_cell', 'rmse', 'error')]
summarized_elimcell_rf$rmse_sd <- 0
summarized_elimcell_rf$error_sd <- 0
summarized_elimcell_rf$model_type <- elimcell_rf$model_type
colnames(summarized_elimcell_rf) <- c('elim_cell', 'rmse_mean', 'error_mean', 'rmse_sd', 'error_sd', 'model_type')
elimcell_ols <- elimcell_results[elimcell_results$model_type == 'ols',]
summarized_elimcell_ols <- elimcell_ols %>%
group_by(elim_cell) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
summarized_elimcell <- rbind(summarized_elimcell_rf, summarized_elimcell_ols)
ggplot(summarized_elimcell, aes(x = elim_cell, y = rmse, col = model_type)) +
geom_point() +
ggtitle('eliminated cell, rmse') +
theme_bw()
ggplot(summarized_elimcell, aes(x = elim_cell, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=0) +
ggtitle('eliminated cell, rmse') +
theme_bw()
summarized_elimcell
summarized_elimcell_rf
summarized_elimcell_ols
elimcell_results <- imported_prediction_error[imported_prediction_error$elim_type == "cell",]
elimcell_rf <- elimcell_results[elimcell_results$model_type == 'rf',]
summarized_elimcell_rf <- elimcell_rf[, c('elim_cell', 'rmse', 'error')]
summarized_elimcell_rf$rmse_sd <- 0
summarized_elimcell_rf$error_sd <- 0
summarized_elimcell_rf$model_type <- elimcell_rf$model_type
colnames(summarized_elimcell_rf) <- c('elim_cell', 'rmse_mean', 'error_mean', 'rmse_sd', 'error_sd', 'model_type')
elimcell_ols <- elimcell_results[elimcell_results$model_type == 'ols',]
summarized_elimcell_ols <- elimcell_ols %>%
group_by(elim_cell) %>%
dplyr::summarize(rmse_mean = mean(rmse),
error_mean = mean(error),
rmse_sd = sd(rmse),
error_sd = sd(error)) %>%
mutate(model_type = 'ols')
summarized_elimcell <- rbind(summarized_elimcell_rf, summarized_elimcell_ols)
ggplot(summarized_elimcell, aes(x = elim_cell, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=0) +
ggtitle('eliminated cell, rmse') +
theme_bw()
summarized_elimcell
ggplot(summarized_elimcell, aes(x = elim_cell_factor, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=0) +
ggtitle('eliminated cell, rmse') +
theme_bw()
summarized_elimcell$elim_cell_factor <- as.factor(summarized_elimcell$elim_cell)
ggplot(summarized_elimcell, aes(x = elim_cell_factor, y = rmse_mean, col = model_type)) +
geom_line() +
geom_errorbar(aes(ymin=rmse_mean - rmse_sd, ymax=rmse_mean + rmse_sd), width=0) +
ggtitle('eliminated cell, rmse') +
theme_bw()
print('elim cell, mean rmse, rf')
print(mean(elimcell_results$rmse))
print(paste('elim cell, rmse, rf: ', mean(elimcell_rf$rmse), '+/-', sd(elimcell_rf$rmse)))
print(paste('elim cell, rmse, ols: ', mean(elimcell_ols$rmse), '+/-', sd(elimcell_ols$rmse)))
print(paste('elim cell, rmse, rf: ', mean(elimcell_rf$rmse), '+/-', sd(elimcell_rf$rmse)))
print(paste('elim cell, rmse, ols: ', mean(elimcell_ols$rmse), '+/-', sd(elimcell_ols$rmse)))
print(paste('elim cell, error, rf: ', mean(elimcell_rf$error), '+/-', sd(elimcell_rf$error)))
print(paste('elim cell, error, ols: ', mean(elimcell_ols$error), '+/-', sd(elimcell_ols$error)))
imported_prediction_error$elim_year
imported_prediction_error$elim_type
elimrandom_results <- imported_prediction_error[imported_prediction_error$elim_type == "30%",]
elimrandom_rf <- elimrandom_results[elimrandom_results$model_type == 'rf',]
elimrandom_ols <- elimrandom_results[elimrandom_results$model_type == 'ols',]
elimrandom_fe <- elimrandom_results[elimrandom_results$model_type == 'fe',]
print('_____')
print(paste('elim 30%, rmse, rf: ', mean(elimrandom_rf$rmse), '+/-', sd(elimrandom_rf$rmse)))
print(paste('elim 30%, rmse, ols: ', mean(elimrandom_ols$rmse), '+/-', sd(elimrandom_ols$rmse)))
print(paste('elim 30%, rmse, fe: ', mean(elimrandom_fe$rmse), '+/-', sd(elimrandom_fe$rmse)))
print('_____')
print(paste('elim 30%, error, rf: ', mean(elimrandom_rf$error), '+/-', sd(elimrandom_rf$error)))
print(paste('elim 30%, error, ols: ', mean(elimrandom_ols$error), '+/-', sd(elimrandom_ols$error)))
print(paste('elim 30%, error, fe: ', mean(elimrandom_fe$error), '+/-', sd(elimrandom_fe$error)))
