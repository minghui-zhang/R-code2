#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram() +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- plot_data[1,:]
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- plot_data[1,]
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
geom_vline(xintercept = cell_data[cell_data$year == input$user_year & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- plot_data[1,]
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
cell_data
cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date"]
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- as.data.frame(plot_data[1,])
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- as.data.frame(plot_data[1,])
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date_formatted"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- as.data.frame(plot_data[1,])
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"), labels=(date_format="%B")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date_formatted"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- as.data.frame(plot_data[1,])
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"), labels=(date_format="%Y-%m")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date_formatted"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- as.data.frame(plot_data[1,])
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date_formatted"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- as.data.frame(plot_data[1,])
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="2 month")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date_formatted"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code/Modeling/code/FCN_plotting.R')
source('E:/R-code/Modeling/code/FCN_sample_data.R')
source('E:/R-code/Modeling/code/FCN_run_model_spatial_sampled.R')
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
onset_type <- 'Gabriel_onset'
median_cell_raw <- read.csv('E:/R-code/Modeling/data/median_onset_cell_v2.csv')
percentile5_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile5_onset_cell_v2.csv')
percentile95_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile95_onset_cell_v2.csv')
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
cell_sf <- st_read(dsn = 'E:/R-code/Modeling/data/shp/median_onset_cell', layer = 'median_onset_cell_SHP')
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
median_cell <- median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
median_cell$plant_stat_type <- rep('median', nrow(median_cell))
# percentiles
# percentile5_cell <- percentile5_cell_raw %>% rename_cols_percentile_cell()
# percentile95_cell <- percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
cell_sf$cell_ID <- median_cell$cell_ID
cell_sf$cell_ID <- sapply(as.character(cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
cell_sf$plant_stat_type <- rep("median", nrow(cell_sf))
# cell_sf_percentile5 <- cell_sf
# cell_sf_percentile5$SC_plant <- percentile5_cell$SC_plant
# cell_sf_percentile5$DC_plant <- percentile5_cell$DC_plant
# cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(cell_sf_percentile5))
#
# cell_sf_percentile95 <- cell_sf
# cell_sf_percentile95$SC_plant <- percentile95_cell$SC_plant
# cell_sf_percentile95$DC_plant <- percentile95_cell$DC_plant
# cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(cell_sf_percentile95))
#
# cell_sf <- rbind(cell_sf, cell_sf_percentile5, cell_sf_percentile95)
## FOR PLANT
cell_sf_tidy_plant <- cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
dplyr::select(-c(SC_harvest, DC_harvest))
cell_sf_tidy_plant$year_index <- cell_sf_tidy_plant$year - 2003
cell_sf_tidy_plant$year_factor <- as.factor(cell_sf_tidy_plant$year)
cell_sf_tidy_plant <- cell_sf_tidy_plant %>%  drop_na
cell_sf_tidy_plant$plant_or_harv <- "plant"
cell_sf_tidy_plant$date <- cell_sf_tidy_plant$plant
cell_sf_tidy_plant <- cell_sf_tidy_plant %>%
dplyr::select(-c(plant))
## FOR HARVEST
cell_sf_tidy_harvest <- cell_sf %>% tidy_by_intensity_harvest("SC_harvest", "DC_harvest") %>%
dplyr::select(-c(SC_plant, DC_plant))
cell_sf_tidy_harvest$year_index <- cell_sf_tidy_harvest$year - 2003
cell_sf_tidy_harvest$year_factor <- as.factor(cell_sf_tidy_harvest$year)
cell_sf_tidy_harvest <- cell_sf_tidy_harvest %>%  drop_na
cell_sf_tidy_harvest$plant_or_harv <- "harvest"
cell_sf_tidy_harvest$date <- cell_sf_tidy_harvest$harvest
cell_sf_tidy_harvest <- cell_sf_tidy_harvest %>%
dplyr::select(-c(harvest))
# bind the rows
cell_sf_tidy_final <- rbind(cell_sf_tidy_plant, cell_sf_tidy_harvest)
# turn the dates from DOY after Aug 1 to actual dates
cell_sf_tidy_final$plantYear <- cell_sf_tidy_final$year - 1
cell_sf_tidy_final$date_formatted <- as.Date(cell_sf_tidy_final$date, origin = paste0(cell_sf_tidy_final$plantYear, '-08-01'))
cell_sf_tidy_final$date_monthday <- as.Date(cell_sf_tidy_final$date, origin = '2010-08-01')
# plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "DC",]
#
#
# ggplot(as.data.frame(plot_data), mapping = aes(x = year)) +
#           geom_point(mapping = aes(y = date_monthday, col = plant_or_harv)) +
#           xlab("Year") +
#           ylab("Date") +
#           scale_color_manual(name = "",
#                              labels = c("Harvest date", "Planting date"),
#                              values = c("plant" = "darkgreen", "harvest" = "darkred")) +
#           labs(shape = "") +
#           ggtitle("Invalid cell chosen. Showing timeseries at all cells") +
#           theme_bw()
plot_data <- cell_sf_tidy_final[cell_sf_tidy_final$intensity == "SC" & cell_sf_tidy_final$year == 2014,]
cell_data <- as.data.frame(plot_data[1,])
ggplot(as.data.frame(plot_data), aes(x = date_formatted, fill = plant_or_harv)) +
geom_histogram(alpha = 0.5) +
#scale_fill_manual(values=c("red", "darkgreen")) +
#stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="2 month")) +
geom_vline(xintercept = cell_data[cell_data$year == 2014 & cell_data$intensity == "SC" & cell_data$plant_or_harv == "plant", "date_formatted"],
col = "darkgreen", size = 2) + # get plant date for specific year +
theme_bw() +
labs(fill = "") +
ylim(0, 130)
# for app.R
cell_sf_tidy_final <- cell_sf_tidy_final %>%  drop_na %>%
mutate(year_factor = as.factor(year))
saveRDS(as(cell_sf_tidy_final, 'Spatial'), "./cell_spdf_plant_harvest.rds")
runApp('E:/R-code/Webpage/cropTiming2')
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code/Modeling/code/FCN_plotting.R')
source('E:/R-code/Modeling/code/FCN_sample_data.R')
source('E:/R-code/Modeling/code/FCN_run_model_spatial_sampled.R')
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
onset_type <- 'Gabriel_onset'
median_cell_raw <- read.csv('E:/R-code/Modeling/data/median_onset_cell_v2.csv')
percentile5_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile5_onset_cell_v2.csv')
percentile95_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile95_onset_cell_v2.csv')
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
cell_sf <- st_read(dsn = 'E:/R-code/Modeling/data/shp/median_onset_cell', layer = 'median_onset_cell_SHP')
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
median_cell <- median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
median_cell$plant_stat_type <- rep('median', nrow(median_cell))
# percentiles
# percentile5_cell <- percentile5_cell_raw %>% rename_cols_percentile_cell()
# percentile95_cell <- percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
cell_sf$cell_ID <- median_cell$cell_ID
cell_sf$cell_ID <- sapply(as.character(cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
cell_sf$plant_stat_type <- rep("median", nrow(cell_sf))
# cell_sf_percentile5 <- cell_sf
# cell_sf_percentile5$SC_plant <- percentile5_cell$SC_plant
# cell_sf_percentile5$DC_plant <- percentile5_cell$DC_plant
# cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(cell_sf_percentile5))
#
# cell_sf_percentile95 <- cell_sf
# cell_sf_percentile95$SC_plant <- percentile95_cell$SC_plant
# cell_sf_percentile95$DC_plant <- percentile95_cell$DC_plant
# cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(cell_sf_percentile95))
#
# cell_sf <- rbind(cell_sf, cell_sf_percentile5, cell_sf_percentile95)
## FOR PLANT
cell_sf_tidy_plant <- cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
dplyr::select(-c(SC_harvest, DC_harvest))
cell_sf_tidy_plant$year_index <- cell_sf_tidy_plant$year - 2003
cell_sf_tidy_plant$year_factor <- as.factor(cell_sf_tidy_plant$year)
cell_sf_tidy_plant <- cell_sf_tidy_plant %>%  drop_na
cell_sf_tidy_plant$plant_or_harv <- "plant"
cell_sf_tidy_plant$date <- cell_sf_tidy_plant$plant
cell_sf_tidy_plant <- cell_sf_tidy_plant %>%
dplyr::select(-c(plant))
## FOR HARVEST
cell_sf_tidy_harvest <- cell_sf %>% tidy_by_intensity_harvest("SC_harvest", "DC_harvest") %>%
dplyr::select(-c(SC_plant, DC_plant))
cell_sf_tidy_harvest$year_index <- cell_sf_tidy_harvest$year - 2003
cell_sf_tidy_harvest$year_factor <- as.factor(cell_sf_tidy_harvest$year)
cell_sf_tidy_harvest <- cell_sf_tidy_harvest %>%  drop_na
cell_sf_tidy_harvest$plant_or_harv <- "harvest"
cell_sf_tidy_harvest$date <- cell_sf_tidy_harvest$harvest
cell_sf_tidy_harvest <- cell_sf_tidy_harvest %>%
dplyr::select(-c(harvest))
# bind the rows
cell_sf_tidy_final <- rbind(cell_sf_tidy_plant, cell_sf_tidy_harvest)
# turn the dates from DOY after Aug 1 to actual dates
cell_sf_tidy_final$plantYear <- cell_sf_tidy_final$year - 1
cell_sf_tidy_final$date_formatted <- as.Date(cell_sf_tidy_final$date, origin = paste0(cell_sf_tidy_final$plantYear, '-08-01'))
cell_sf_tidy_final$date_monthday <- as.Date(cell_sf_tidy_final$date, origin = '2010-08-01')
cell_sf_tidy_final$onset_date_formatted <- as.Date(cell_sf_tidy_final$onset, origin = paste0(cell_sf_tidy_final$plantYear, '-08-01'))
cell_sf_tidy_final$onset_monthday <- as.Date(cell_sf_tidy_final$onset, origin = '2010-08-01')
# for app.R
cell_sf_tidy_final <- cell_sf_tidy_final %>%  drop_na %>%
mutate(year_factor = as.factor(year))
saveRDS(as(cell_sf_tidy_final, 'Spatial'), "./cell_spdf_plant_harvest.rds")
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
install.packages('grid')
install.packages("grid")
?arrow
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
names(df)
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
runApp('E:/R-code/Webpage/cropTiming2')
setwd("E:/R-code/Webpage/cropTiming2")
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
