chosen_intensity = "DC")
#if (agg_scheme) {agg_scheme_str <- "Agg"}
#else {agg_scheme_str <- "NotAgg"}
print(paste("grid size", grid_size))
print(paste("agg scheme", agg_scheme))
selected_output <- as.numeric(c(grid_size, agg_scheme, lat_offset, lon_offset,
model_output$onset_coef, model_output$intensity_coef, #model_output$lat_coef,
model_output$R2, model_output$percent_data_used,
model_output$residual_moran_pval, model_output$onset_moran_pval,
model_output$plant_moran_pval,
#mean(model_output$prediction_results_elimyear$RMSE, na.rm = TRUE),
mean(model_output$prediction_results_elimlocation$RMSE, na.rm = TRUE)
))
if (do_elim_year) {
selected_output <- c(selected_output, mean(model_output$prediction_results_elimyear$RMSE, na.rm = TRUE))
}
print(selected_output)
results <- rbind(results, selected_output)
}
}
}
}
# test different grid sizes and aggregation strategies. don't do any offset
do_elim_year = TRUE # TOGGLE TRUE IF USE YEAR AS TREND, FALSE IF USE YEAR AS FIXED EFFECT
results <- data.frame()
for (grid_size in seq(0.75, 0.75, 0.25)) { # 0.25 to 1.75, seq(0.75, 1.25, 0.25)
for (agg_scheme in c(FALSE)) {
for (lat_offset in seq(0, 0.5, by = 0.25)) { # 0 to 1.5
for (lon_offset in seq(0, 0.5, by = 0.25)) { # 0 to 1.5
model_output <- run_OLS(full_data = cell_sf_tidy,
predictors = c("onset", "intensity",
"region", "lat", "lon", # for spatial effects: lat, lon, region, Muni_code
"year_index" # for time effects
#"onset:intensity" # interactions: for intensity effects
),
y.var = "plant", plant_stat = "median",
grid_size = grid_size,
lat_offset = lat_offset, lon_offset = lon_offset, agg_scheme = agg_scheme,
plot_samples = FALSE, plot_model_evals = TRUE,
year_oi = 2007,
do_elim_year = do_elim_year,
chosen_intensity = "DC")
#if (agg_scheme) {agg_scheme_str <- "Agg"}
#else {agg_scheme_str <- "NotAgg"}
print(paste("grid size", grid_size))
print(paste("agg scheme", agg_scheme))
selected_output <- as.numeric(c(grid_size, agg_scheme, lat_offset, lon_offset,
model_output$onset_coef, model_output$intensity_coef, #model_output$lat_coef,
model_output$R2, model_output$percent_data_used,
model_output$residual_moran_pval, model_output$onset_moran_pval,
model_output$plant_moran_pval,
#mean(model_output$prediction_results_elimyear$RMSE, na.rm = TRUE),
mean(model_output$prediction_results_elimlocation$RMSE, na.rm = TRUE)
))
if (do_elim_year) {
selected_output <- c(selected_output, mean(model_output$prediction_results_elimyear$RMSE, na.rm = TRUE))
}
print(selected_output)
results <- rbind(results, selected_output)
}
}
}
}
if (do_elim_year) {
names(results) <- c("grid_size", "agg_scheme", "lat_offset", "lon_offset",
"onset_coef", "intensity_coef", #"lat_coef",
"R2", "percent_used", "residual_moran_pval", "onset_moran_pval",
"plant_moran_pval",
"mean_RMSE_elimlocation", "mean_RMSE_elimyear")
}
if (!do_elim_year) {
names(results) <- c("grid_size", "agg_scheme", "lat_offset", "lon_offset",
"onset_coef", "intensity_coef", #"lat_coef",
"R2", "percent_used", "residual_moran_pval", "onset_moran_pval",
"plant_moran_pval",
"mean_RMSE_elimlocation")
}
results$agg_scheme <- as.factor(results$agg_scheme)
# SAVED RESULTS
saveRDS(results, "spatial_sampling_results.rds")
# calculate mean and sd for each grid size x agg scheme, for different grid offsets
results_summary <- results %>%
group_by(grid_size, agg_scheme) %>%
summarize(
onset_coef_mean = mean(onset_coef),
onset_coef_sd = sd(onset_coef),
intensity_coef_mean = mean(intensity_coef),
intensity_coef_sd = sd(intensity_coef),
#lat_coef_mean = mean(lat_coef),
#lat_coef_sd = sd(lat_coef),
R2_mean = mean(R2),
R2_sd = sd(R2),
percent_used_mean = mean(percent_used),
percent_used_sd = sd(percent_used),
residual_moran_pval_mean = mean(residual_moran_pval),
residual_moran_pval_sd = sd(residual_moran_pval),
onset_moran_pval_mean = mean(onset_moran_pval),
onset_moran_pval_sd = sd(onset_moran_pval),
plant_moran_pval_mean = mean(plant_moran_pval),
plant_moran_pval_sd = sd(plant_moran_pval),
#RMSE_elimyear_mean = mean(mean_RMSE_elimyear), # TURN OFF IF USE YEAR AS FACTOR
#RMSE_elimyear_sd = sd(mean_RMSE_elimyear), # TURN OFF IF USE YEAR AS FACTOR
RMSE_elimlocation_mean = mean(mean_RMSE_elimlocation),
RMSE_elimlocation_sd = sd(mean_RMSE_elimlocation)
)
if (do_elim_year) {
elim_year_summary <- results %>%
group_by(grid_size, agg_scheme) %>%
summarize(
RMSE_elimyear_mean = mean(mean_RMSE_elimyear),
RMSE_elimyear_sd = sd(mean_RMSE_elimyear)
)
results_summary <- cbind(results_summary, elim_year_summary)
}
# compare grid sizes and aggregation schemes
plot_results <- function(data, x_data, y_data, x_label, y_label, col_data) {
ggplot(data, aes(x = x_data, y = y_data, col = col_data)) +
geom_line() +
ggtitle(y_label) +
xlab(x_label) +
ylab(y_label)+
labs(col = "Aggregation scheme") +
theme_bw()
}
plot_results_summary <- function(data, x_data, y_data, y_sd, x_label, y_label, col_data) {
ggplot(data, aes(x = x_data, y = y_data, col = col_data)) +
geom_line() +
geom_errorbar(aes(ymin=y_data-y_sd, ymax=y_data+y_sd), position=position_dodge(0.05)) +
ggtitle(y_label) +
xlab(x_label) +
ylab(y_label)+
labs(col = "Aggregation scheme") +
theme_bw()
}
# plot results, summarizing for different grid offsets
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$onset_coef_mean,
y_sd = results_summary$onset_coef_sd,
x_label = "grid_size", y_label = "onset coefficient",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$intensity_coef_mean,
y_sd = results_summary$intensity_coef_sd,
x_label = "grid_size", y_label = "intensity coefficient",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$R2_mean,
y_sd = results_summary$R2_sd,
x_label = "grid_size", y_label = "R2",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$percent_used_mean,
y_sd = results_summary$percent_used_sd,
x_label = "grid_size", y_label = "percent used",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$residual_moran_pval_mean,
y_sd = results_summary$residual_moran_pval_sd,
x_label = "grid_size", y_label = "residual moran's I p value",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$onset_moran_pval_mean,
y_sd = results_summary$onset_moran_pval_sd,
x_label = "grid_size", y_label = "onset moran's I p value",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$plant_moran_pval_mean,
y_sd = results_summary$plant_moran_pval_sd,
x_label = "grid_size", y_label = "plant moran's I p value",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$RMSE_elimlocation_mean,
y_sd = results_summary$RMSE_elimlocation_sd,
x_label = "grid_size", y_label = "RMSE from eliminating location",
col_data = results_summary$agg_scheme)
if (do_elim_year) {
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$RMSE_elimyear_mean,
y_sd = results_summary$RMSE_elimyear_sd,
x_label = "grid_size", y_label = "RMSE from eliminating year",
col_data = results_summary$agg_scheme)
}
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code2/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code2/Modeling/code/FCN_plotting.R')
source('E:/R-code2/Modeling/code/FCN_sample_data.R')
source('E:/R-code2/Modeling/code/FCN_run_model_spatial_sampled.R')
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
onset_type <- 'AA_25_chirps_ATchirps5km' #'AA_25_chirps_ATchirps5km' # 'Gabriel_onset'
if (onset_type != 'Gabriel_onset') {
filename_median <- paste0('E:/R-code-large-files/data_onset_', onset_type, '/median_onset_cell_', onset_type, '.csv')
filename_percentile5 <- paste0('E:/R-code-large-files/data_onset_', onset_type, '/percentile5_onset_cell_', onset_type, '.csv')
filename_percentile25 <- paste0('E:/R-code-large-files/data_onset_', onset_type, '/percentile25_onset_cell_', onset_type, '.csv')
filename_shp<- paste0('E:/R-code-large-files/data_onset_', onset_type, '/shp')
layername_shp <- paste0('median_onset_cell_SHP_', onset_type)
median_cell_raw <- read.csv(filename_median)
percentile5_cell_raw <- read.csv(filename_percentile5)
percentile25_cell_raw <- read.csv(filename_percentile25)
cell_sf <- st_read(dsn = filename_shp, layer = layername_shp)
}
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code2/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code2/Modeling/code/FCN_plotting.R')
source('E:/R-code2/Modeling/code/FCN_sample_data.R')
source('E:/R-code2/Modeling/code/FCN_run_model_spatial_sampled.R')
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
onset_type <- 'AA_25_chirps_ATchirps5km' #'AA_25_chirps_ATchirps5km' # 'Gabriel_onset'
if (onset_type != 'Gabriel_onset') {
filename_median <- paste0('E:/R-code-large-files/data_onset_', onset_type, '/median_onset_cell_', onset_type, '.csv')
filename_percentile5 <- paste0('E:/R-code-large-files/data_onset_', onset_type, '/percentile5_onset_cell_', onset_type, '.csv')
filename_percentile25 <- paste0('E:/R-code-large-files/data_onset_', onset_type, '/percentile25_onset_cell_', onset_type, '.csv')
filename_shp<- paste0('E:/R-code-large-files/data_onset_', onset_type, '/shp')
layername_shp <- paste0('median_onset_cell_SHP_', onset_type)
median_cell_raw <- read.csv(filename_median)
percentile5_cell_raw <- read.csv(filename_percentile5)
percentile25_cell_raw <- read.csv(filename_percentile25)
cell_sf <- st_read(dsn = filename_shp, layer = layername_shp)
}
if (onset_type == 'Gabriel_onset') {
median_cell_raw <- read.csv('E:/R-code2/Modeling/data/median_onset_cell_v3.csv')
percentile5_cell_raw <- read.csv('E:/R-code2/Modeling/data/percentile5_onset_cell_v3.csv')
percentile25_cell_raw <- read.csv('E:/R-code2/Modeling/data/percentile25_onset_cell_v3.csv')
cell_sf <- st_read(dsn = 'E:/R-code2/Modeling/data/shp/median_onset_cell_v3', layer = 'median_onset_cell_SHP_v3')
}
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
median_cell <- median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
median_cell$plant_stat_type <- rep('median', nrow(median_cell))
# percentiles
percentile5_cell <- percentile5_cell_raw %>% rename_cols_percentile_cell()
percentile25_cell <- percentile25_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
cell_sf$cell_ID <- median_cell$cell_ID
cell_sf$cell_ID <- sapply(as.character(cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
cell_sf$plant_stat_type <- rep("median", nrow(cell_sf))
cell_sf_percentile5 <- cell_sf
cell_sf_percentile5$SC_plant <- percentile5_cell$SC_plant
cell_sf_percentile5$DC_plant <- percentile5_cell$DC_plant
cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(cell_sf_percentile5))
cell_sf_percentile25 <- cell_sf
cell_sf_percentile25$SC_plant <- percentile25_cell$SC_plant
cell_sf_percentile25$DC_plant <- percentile25_cell$DC_plant
cell_sf_percentile25$plant_stat_type <- rep("percentile25", nrow(cell_sf_percentile25))
cell_sf <- rbind(cell_sf, cell_sf_percentile5, cell_sf_percentile25)
cell_sf_tidy <- cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
#tidy_by_intensity_delay("SC_delay", "DC_delay") %>%
dplyr::select(-c(SC_harvest, DC_harvest)) %>%
categorize_regions_cell_sf_tidy() # categorize cells into four regions
cell_sf_tidy$year_index <- cell_sf_tidy$year - 2003
cell_sf_tidy$year_factor <- as.factor(cell_sf_tidy$year)
cell_sf_tidy <- cell_sf_tidy %>%  drop_na
cell_sf_tidy$delay <- cell_sf_tidy$plant - cell_sf_tidy$onset
# plotting
year <- 2013
cell_year <- cell_sf_tidy[cell_sf_tidy$year == year, ]
onset_map <- ggplot(cell_year) +
geom_sf(aes(fill = onset)) +
scale_fill_viridis() +
ggtitle(paste("Onset for spatial sampling", year, 'Gabriel onset')) +
geom_polygon(data = MT_outline, aes(x = long, y = lat), color = "black", alpha = 0, linetype = 1) +
theme_bw()
#print(onset_map)
# test different grid sizes and aggregation strategies. don't do any offset
do_elim_year = TRUE # TOGGLE TRUE IF USE YEAR AS TREND, FALSE IF USE YEAR AS FIXED EFFECT
results <- data.frame()
for (grid_size in seq(0.25, 1, 0.25)) { # 0.25 to 1.75, seq(0.75, 1.25, 0.25)
for (agg_scheme in c(FALSE)) {
for (lat_offset in seq(0, 1, by = 0.25)) { # 0 to 1.5
for (lon_offset in seq(0, 1, by = 0.25)) { # 0 to 1.5
model_output <- run_OLS(full_data = cell_sf_tidy,
predictors = c("onset", "intensity",
"region", "lat", "lon", # for spatial effects: lat, lon, region, Muni_code
"year_index" # for time effects
#"onset:intensity" # interactions: for intensity effects
),
y.var = "plant", plant_stat = "median",
grid_size = grid_size,
lat_offset = lat_offset, lon_offset = lon_offset, agg_scheme = agg_scheme,
plot_samples = FALSE, plot_model_evals = FALSE,
year_oi = 2007,
do_elim_year = do_elim_year,
chosen_intensity = "DC")
#if (agg_scheme) {agg_scheme_str <- "Agg"}
#else {agg_scheme_str <- "NotAgg"}
print(paste("grid size", grid_size))
print(paste("agg scheme", agg_scheme))
selected_output <- as.numeric(c(grid_size, agg_scheme, lat_offset, lon_offset,
model_output$onset_coef, model_output$intensity_coef, #model_output$lat_coef,
model_output$R2, model_output$percent_data_used,
model_output$residual_moran_pval, model_output$onset_moran_pval,
model_output$plant_moran_pval,
#mean(model_output$prediction_results_elimyear$RMSE, na.rm = TRUE),
mean(model_output$prediction_results_elimlocation$RMSE, na.rm = TRUE)
))
if (do_elim_year) {
selected_output <- c(selected_output, mean(model_output$prediction_results_elimyear$RMSE, na.rm = TRUE))
}
print(selected_output)
results <- rbind(results, selected_output)
}
}
}
}
results
head(results)
if (do_elim_year) {
names(results) <- c("grid_size", "agg_scheme", "lat_offset", "lon_offset",
"onset_coef", "intensity_coef", #"lat_coef",
"R2", "percent_used", "residual_moran_pval", "onset_moran_pval",
"plant_moran_pval",
"mean_RMSE_elimlocation", "mean_RMSE_elimyear")
}
results$agg_scheme <- as.factor(results$agg_scheme)
# SAVED RESULTS
saveRDS(results, "spatial_sampling_results.rds")
# calculate mean and sd for each grid size x agg scheme, for different grid offsets
results_summary <- results %>%
group_by(grid_size, agg_scheme) %>%
summarize(
onset_coef_mean = mean(onset_coef),
onset_coef_sd = sd(onset_coef),
intensity_coef_mean = mean(intensity_coef),
intensity_coef_sd = sd(intensity_coef),
#lat_coef_mean = mean(lat_coef),
#lat_coef_sd = sd(lat_coef),
R2_mean = mean(R2),
R2_sd = sd(R2),
percent_used_mean = mean(percent_used),
percent_used_sd = sd(percent_used),
residual_moran_pval_mean = mean(residual_moran_pval),
residual_moran_pval_sd = sd(residual_moran_pval),
onset_moran_pval_mean = mean(onset_moran_pval),
onset_moran_pval_sd = sd(onset_moran_pval),
plant_moran_pval_mean = mean(plant_moran_pval),
plant_moran_pval_sd = sd(plant_moran_pval),
#RMSE_elimyear_mean = mean(mean_RMSE_elimyear), # TURN OFF IF USE YEAR AS FACTOR
#RMSE_elimyear_sd = sd(mean_RMSE_elimyear), # TURN OFF IF USE YEAR AS FACTOR
RMSE_elimlocation_mean = mean(mean_RMSE_elimlocation),
RMSE_elimlocation_sd = sd(mean_RMSE_elimlocation)
)
if (do_elim_year) {
elim_year_summary <- results %>%
group_by(grid_size, agg_scheme) %>%
summarize(
RMSE_elimyear_mean = mean(mean_RMSE_elimyear),
RMSE_elimyear_sd = sd(mean_RMSE_elimyear)
)
results_summary <- cbind(results_summary, elim_year_summary)
}
# compare grid sizes and aggregation schemes
plot_results <- function(data, x_data, y_data, x_label, y_label, col_data) {
ggplot(data, aes(x = x_data, y = y_data, col = col_data)) +
geom_line() +
ggtitle(y_label) +
xlab(x_label) +
ylab(y_label)+
labs(col = "Aggregation scheme") +
theme_bw()
}
plot_results_summary <- function(data, x_data, y_data, y_sd, x_label, y_label, col_data) {
ggplot(data, aes(x = x_data, y = y_data, col = col_data)) +
geom_line() +
geom_errorbar(aes(ymin=y_data-y_sd, ymax=y_data+y_sd), position=position_dodge(0.05)) +
ggtitle(y_label) +
xlab(x_label) +
ylab(y_label)+
labs(col = "Aggregation scheme") +
theme_bw()
}
# plot results, summarizing for different grid offsets
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$onset_coef_mean,
y_sd = results_summary$onset_coef_sd,
x_label = "grid_size", y_label = "onset coefficient",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$intensity_coef_mean,
y_sd = results_summary$intensity_coef_sd,
x_label = "grid_size", y_label = "intensity coefficient",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$R2_mean,
y_sd = results_summary$R2_sd,
x_label = "grid_size", y_label = "R2",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$percent_used_mean,
y_sd = results_summary$percent_used_sd,
x_label = "grid_size", y_label = "percent used",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$residual_moran_pval_mean,
y_sd = results_summary$residual_moran_pval_sd,
x_label = "grid_size", y_label = "residual moran's I p value",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$onset_moran_pval_mean,
y_sd = results_summary$onset_moran_pval_sd,
x_label = "grid_size", y_label = "onset moran's I p value",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$plant_moran_pval_mean,
y_sd = results_summary$plant_moran_pval_sd,
x_label = "grid_size", y_label = "plant moran's I p value",
col_data = results_summary$agg_scheme)
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$RMSE_elimlocation_mean,
y_sd = results_summary$RMSE_elimlocation_sd,
x_label = "grid_size", y_label = "RMSE from eliminating location",
col_data = results_summary$agg_scheme)
if (do_elim_year) {
plot_results_summary(data = results_summary,
x_data = results_summary$grid_size, y_data = results_summary$RMSE_elimyear_mean,
y_sd = results_summary$RMSE_elimyear_sd,
x_label = "grid_size", y_label = "RMSE from eliminating year",
col_data = results_summary$agg_scheme)
}
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code2/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code2/Modeling/code/FCN_plotting.R')
source('E:/R-code2/Modeling/code/FCN_sample_data.R')
source('E:/R-code2/Modeling/code/FCN_run_model_spatial_sampled.R')
source('E:/R-code2/Modeling/code/FCN_predictionError_ML.R')
source('E:/R-code2/Modeling/code/FCN_predictionError_ML.R')
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code2/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code2/Modeling/code/FCN_plotting.R')
source('E:/R-code2/Modeling/code/FCN_sample_data.R')
source('E:/R-code2/Modeling/code/FCN_run_model_spatial_sampled.R')
source('E:/R-code2/Modeling/code/FCN_predictionError_ML.R')
