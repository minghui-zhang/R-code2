diff_percentile75_95_DC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
print('t-test: p values comparing intensities: (for percentile95, to percentile5)')
print(paste(diff_intensities_percentile95, diff_intensities_percentile95, diff_intensities_median, diff_intensities_percentile25, diff_intensities_percentile5))
print('t-test: p values comparing percentile5 and percentile25 (for SC, then DC):')
print(paste(diff_percentile5_25_SC, diff_percentile5_25_DC))
print('t-test: p values comparing percentile25 and median (for SC, then DC):')
print(paste(diff_percentile25_50_SC, diff_percentile25_50_DC))
print('t-test: p values comparing percentile50 and percentile75 (for SC, then DC):')
print(paste(diff_percentile50_75_SC, diff_percentile50_75_DC))
print('t-test: p values comparing percentile75 and percentile95 (for SC, then DC):')
print(paste(diff_percentile75_95_SC, diff_percentile75_95_DC))
# kolmogorov-smirnov test --------------------------------------------------------
diff_intensities_median <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile25 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile5 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile75 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile95 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile5_25_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile5_25_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile25_50_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile25_50_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile50_75_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile50_75_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile75_95_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile75_95_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
print('ks test: p values comparing intensities: (for percentile95, to percentile5)')
print(paste(diff_intensities_percentile95, diff_intensities_percentile95, diff_intensities_median, diff_intensities_percentile25, diff_intensities_percentile5))
print('ks test: p values comparing percentile5 and percentile25 (for SC, then DC):')
print(paste(diff_percentile5_25_SC, diff_percentile5_25_DC))
print('ks test: p values comparing percentile25 and median (for SC, then DC):')
print(paste(diff_percentile25_50_SC, diff_percentile25_50_DC))
print('ks test: p values comparing percentile50 and percentile75 (for SC, then DC):')
print(paste(diff_percentile50_75_SC, diff_percentile50_75_DC))
print('ks test: p values comparing percentile75 and percentile95 (for SC, then DC):')
print(paste(diff_percentile75_95_SC, diff_percentile75_95_DC))
# plot distributions -----------------------------------------------------------------------------------------
pdfs_DC_comparingPercentiles <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC', ],
aes(x=onset_coef, fill = percentile)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('Double cropped soy') +
theme_bw()
pdfs_SC_comparingPercentiles <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC', ],
aes(x=onset_coef, fill = percentile)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('Single cropped soy') +
theme_bw()
pdfs_percentile5_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile5', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('5th percentile') +
theme_bw()
pdfs_percentile25_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile25', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('25th percentile') +
theme_bw()
pdfs_percentile50_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'median', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('50th percentile') +
theme_bw()
pdfs_percentile75_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile75', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('75th percentile') +
theme_bw()
pdfs_percentile95_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile95', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('95th percentile') +
theme_bw()
print(pdfs_DC_comparingPercentiles)
print(pdfs_SC_comparingPercentiles)
print(pdfs_percentile5_comparingIntensities)
print(pdfs_percentile25_comparingIntensities)
print(pdfs_percentile50_comparingIntensities)
print(pdfs_percentile75_comparingIntensities)
print(pdfs_percentile95_comparingIntensities)
# t-statistic by hand for comparing 75th vs 95th percentile, SC (unequal variance) ------------------------------------
group1 <- data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef']
group2 <- data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef']
n1 <- length(group1)
n2 <- length(group2)
t_byhand <- (mean(group1) - mean(group2)) / sqrt(var(group1) / n1 + var(group2) / n2)
print('t test by hand to compare 75th and 95th percentile, SC, unequal variance')
print(paste('t statistic:', t_byhand))
# t-distribution ------------------------------------------------------------------------------------
t_dist_to_plot <- data.frame(t = seq(-20, 20, length = 100),
density = dt(seq(-20, 20, length = 100), df = 1998)) # degrees of freedom = n1 + n2 - 2
t_dist_plot <- ggplot(t_dist_to_plot) +
geom_line(aes(x = t, y = density)) +
ggtitle('t-distribution with df = 1998') +
theme_bw()
print(t_dist_plot)
# rename levels for plotting ---------------------------------------------------------------------------------
levels(final_bootstrap_coefs$intensity) <- c('Single cropped', 'Double cropped')
levels(final_bootstrap_coefs$percentile) <- c('5th', '25th', '50th', '75th', '95th')
onset_coef_plot <- ggplot(final_bootstrap_coefs) +
geom_point(aes(x = percentile, y = onset_coef)) +
geom_errorbar(aes(ymin=onset_coef-onset_sd, ymax=onset_coef+onset_sd, x = percentile)) +
facet_wrap(~ intensity) +
ggtitle(paste('Bootstrapped onset coefficients with', onset_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
year_coef_plot <- ggplot(final_bootstrap_coefs) +
geom_point(aes(x = percentile, y = year_coef)) +
geom_errorbar(aes(ymin=year_coef-year_sd, ymax=year_coef+year_sd, x = percentile)) +
facet_wrap(~ intensity) +
ggtitle(paste('Bootstrapped year coefficients with', onset_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
print(onset_coef_plot)
print(year_coef_plot)
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef']
library(ggplot2)
library(tidyverse)
library(dplyr)
library(rgdal)
library(raster)
library(sf)
library(sp)
library(stats) # ks.test
library(leaps)
library(viridis)
library(spatial)
library(spdep)
library(plm)
library(lmtest)
library(Metrics)
library(randomForest)
# select the onset definition
onset_type <- 'freq_8_chirps_ATchirps5km' #'freq_8_chirps_ATchirps5km' #'AA_25_chirps_ATchirps5km', 'freq_10_persiann', 'AA_25_persiann'# 'Gabriel_onset'
# import data for all sections
os_system <- 'windows' # mac for laptop or windows for desktop
if (os_system == 'windows') {first_folder <- 'E:'}
if (os_system == 'mac') {first_folder <- '~/Documents'}
if (os_system == 'windows_laptop') {first_folder <- 'D:'}
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source(paste0(first_folder,'/R-code2/Modeling/code/FCN_clean_csvs.R'))
source(paste0(first_folder,'/R-code2/Modeling/code/FCN_plotting.R'))
source(paste0(first_folder,'/R-code2/Modeling/code/FCN_sample_data.R'))
source(paste0(first_folder,'/R-code2/Modeling/code/FCN_run_model_spatial_sampled.R'))
MT_outline <- readOGR(dsn = paste0(first_folder,'/R-code2/Modeling/data/shp/MatoGrossoOutline'), layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# cell data -------------------------------------------------------------------------------------------
filename_cell_median <- paste0(first_folder,'/R-code-large-files/data_onset_', onset_type,
'/median_onset_cell_', onset_type, '.csv')
filename_cell_percentile5 <- paste0(first_folder,'/R-code-large-files/data_onset_', onset_type,
'/percentile5_onset_cell_', onset_type, '.csv')
filename_cell_percentile25 <- paste0(first_folder,'/R-code-large-files/data_onset_', onset_type,
'/percentile25_onset_cell_', onset_type, '.csv')
filename_cell_percentile75 <- paste0(first_folder,'/R-code-large-files/data_onset_', onset_type,
'/percentile75_onset_cell_', onset_type, '.csv')
filename_cell_percentile95 <- paste0(first_folder,'/R-code-large-files/data_onset_', onset_type,
'/percentile95_onset_cell_', onset_type, '.csv')
filename_cell_shp<- paste0(first_folder,'/R-code-large-files/data_onset_', onset_type, '/shp')
layername_cell_shp <- paste0('median_onset_cell_SHP_', onset_type)
median_cell_raw <- read.csv(filename_cell_median)
percentile5_cell_raw <- read.csv(filename_cell_percentile5)
percentile25_cell_raw <- read.csv(filename_cell_percentile25)
percentile75_cell_raw <- read.csv(filename_cell_percentile75)
percentile95_cell_raw <- read.csv(filename_cell_percentile95)
cell_sf <- st_read(dsn = filename_cell_shp, layer = layername_cell_shp)
# clean data --------------------------------------------------------------------------------------------
# csv data
median_cell <- median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
median_cell$plant_stat_type <- rep('median', nrow(median_cell))
percentile5_cell <- percentile5_cell_raw %>% rename_cols_percentile_cell()
percentile25_cell <- percentile25_cell_raw %>% rename_cols_percentile_cell()
percentile75_cell <- percentile75_cell_raw %>% rename_cols_percentile_cell()
percentile95_cell <- percentile95_cell_raw %>% rename_cols_percentile_cell()
# sf data
# add cell_ID
clean_cell_ID <- function(cell_ID) {
strsplit(cell_ID, "_")[[1]][2]
}
# get cell_ID column for median
cell_sf$cell_ID <- median_cell$cell_ID
cell_sf$cell_ID <- sapply(as.character(cell_sf$cell_ID), clean_cell_ID)
# at this point, cell_sf has same number of rows in each year. add the previous year's onset, using NA for 2004
# cells_per_year <- nrow(cell_sf[cell_sf$year == 2004,])
# prev_year_onsets <- cell_sf[cell_sf$year <= 2013, 'onset']
# st_geometry(prev_year_onsets) <- NULL
# cell_sf$prev_onset <- c(rep(NA, cells_per_year), prev_year_onsets$onset)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
cell_sf$plant_stat_type <- rep("median", nrow(cell_sf))
cell_sf_percentile5 <- cell_sf
cell_sf_percentile5$SC_plant <- percentile5_cell$SC_plant
cell_sf_percentile5$DC_plant <- percentile5_cell$DC_plant
cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(cell_sf_percentile5))
cell_sf_percentile25 <- cell_sf
cell_sf_percentile25$SC_plant <- percentile25_cell$SC_plant
cell_sf_percentile25$DC_plant <- percentile25_cell$DC_plant
cell_sf_percentile25$plant_stat_type <- rep("percentile25", nrow(cell_sf_percentile25))
cell_sf_percentile75 <- cell_sf
cell_sf_percentile75$SC_plant <- percentile75_cell$SC_plant
cell_sf_percentile75$DC_plant <- percentile75_cell$DC_plant
cell_sf_percentile75$plant_stat_type <- rep("percentile75", nrow(cell_sf_percentile75))
cell_sf_percentile95 <- cell_sf
cell_sf_percentile95$SC_plant <- percentile95_cell$SC_plant
cell_sf_percentile95$DC_plant <- percentile95_cell$DC_plant
cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(cell_sf_percentile95))
cell_sf <- rbind(cell_sf, cell_sf_percentile5, cell_sf_percentile25, cell_sf_percentile75, cell_sf_percentile95)
cell_sf_tidy <- cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
dplyr::select(-c(SC_harvest, DC_harvest)) %>%
categorize_regions_cell_sf_tidy() # categorize cells into four regions
cell_sf_tidy$year_index <- cell_sf_tidy$year - 2003
cell_sf_tidy$year_factor <- as.factor(cell_sf_tidy$year)
#cell_sf_tidy <- cell_sf_tidy %>%  drop_na
cell_sf_tidy <- cell_sf_tidy[!is.na(cell_sf_tidy$plant),]
cell_sf_tidy$delay <- cell_sf_tidy$plant - cell_sf_tidy$onset
# NOTE: the followign works but is slow, did it another way above
# # add previous year's onset; if 2004, use 2004's onset
# get_prev_onset <- function(row) {
#   curr_year <- row$year
#   cell_ID_oi <- row$cell_ID
#
#   if (curr_year == 2004) {return(NA)}
#   if (curr_year != 2004) {prev_year <- curr_year - 1}
#
#   prev_onset <- cell_sf_tidy[cell_sf_tidy$year == prev_year & cell_sf_tidy$cell_ID == cell_ID_oi, 'onset']
#   st_geometry(prev_onset) <- NULL
#
#   return(prev_onset[1, 'onset'])
# }
#
# cell_sf_tidy$prev_onset <- apply(cell_sf_tidy, 1, get_prev_onset)
# onset and year coef for each intensity and percentile, with uncertainty in coef due to planting date estimation error and standard error
plant_sd <- 6.9 # error
n_data_bootstrap <- 1000 # number of bootstrap samples to take of planting date estimates
# save data bootstrap results
data_bootstrap_coefs <- data.frame(intensity = character(0), percentile = character(0),
onset_coef = numeric(0), onset_sderr = numeric(0),
year_coef = numeric(0), year_sderr = numeric(0))
# take one bootstramp sample of planting date, assuming normal distribution
bootstrap_one_date <- function(row, sd) {
mean_date <- row$plant
row$bootstrap_plant <- rnorm(1, mean = mean_date, sd = sd)
}
cell_df <- cell_sf_tidy
st_geometry(cell_df) <- NULL
for (n in 1:n_data_bootstrap) {
print(n)
# Step 1. bootstrap planting date information
bs_plant <- apply(cell_sf_tidy,1,bootstrap_one_date,sd = plant_sd)
bs_cell_df <- cell_df
bs_cell_df$bs_plant <- bs_plant
# Step 2. split by intensity, percentile
for (intensity in c("SC", "DC")) {
for (percentile in c('percentile5', 'percentile25', 'median', 'percentile75', 'percentile95')) {
bs_data_subset <- bs_cell_df[(bs_cell_df$plant_stat_type == percentile) & (bs_cell_df$intensity == intensity), ]
bs_data_subset_panel <- pdata.frame(bs_data_subset, index = c("cell_ID"))
# Step 3. run FE model, get coefficients
fe_model <- plm(bs_plant ~ onset + year, data = bs_data_subset_panel, model = "within")
# get coefficients
coefficients <- fe_model$coefficients
onset_coef <- coefficients["onset"]
year_coef <- coefficients["year"]
# standard errors
std_errors <- summary(fe_model)$coefficients[,2]
onset_std_error <- std_errors["onset"]
year_std_error <- std_errors["year"]
data_bootstrap_coefs <- rbind(data_bootstrap_coefs, data.frame(intensity = intensity, percentile = percentile,
onset_coef = onset_coef, onset_sderr = onset_std_error,
year_coef = year_coef, year_sderr = year_std_error))
}
}
}
saveRDS(data_bootstrap_coefs, paste0("intermediateFE_bootstrapped_coefs_", onset_type, ".rds"))
data_bootstrap_coefs <- readRDS(paste0("intermediateFE_bootstrapped_coefs_", onset_type, ".rds"))
final_bootstrap_coefs <- data.frame(intensity = character(0), percentile = character(0),
onset_coef = numeric(0), onset_sd = numeric(0),
year_coef = numeric(0), year_sd = numeric(0))
list_index <- 0
for (intensity in c("SC", "DC")) {
for (percentile in c('percentile5', 'percentile25', 'median', 'percentile75', 'percentile95')) {
list_index <- list_index + 1
coefs <- data_bootstrap_coefs[(data_bootstrap_coefs$intensity == intensity) & (data_bootstrap_coefs$percentile == percentile),]
final_onset_coef <- mean(coefs$onset_coef)
final_onset_sd <- sd(coefs$onset_coef)
final_year_coef <- mean(coefs$year_coef)
final_year_sd <- sd(coefs$year_coef)
final_bootstrap_coefs <- rbind(final_bootstrap_coefs, data.frame(intensity = intensity, percentile = percentile,
onset_coef = final_onset_coef, onset_sd = final_onset_sd,
year_coef = final_year_coef, year_sd = final_year_sd))
}
}
num_samples_to_test <- 1000 # number of samples to use in t-test and ks.test; max is 1000
# t test -------------------------------------------------------------
diff_intensities_median <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_intensities_percentile25 <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_intensities_percentile5 <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_intensities_percentile75 <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_intensities_percentile95 <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile5_25_SC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile5_25_DC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile25_50_SC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile25_50_DC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile50_75_SC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile50_75_DC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile75_95_SC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
diff_percentile75_95_DC <- t.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", var.equal = FALSE)$p.value
print('t-test: p values comparing intensities: (for percentile95, to percentile5)')
print(paste(diff_intensities_percentile95, diff_intensities_percentile95, diff_intensities_median, diff_intensities_percentile25, diff_intensities_percentile5))
print('t-test: p values comparing percentile5 and percentile25 (for SC, then DC):')
print(paste(diff_percentile5_25_SC, diff_percentile5_25_DC))
print('t-test: p values comparing percentile25 and median (for SC, then DC):')
print(paste(diff_percentile25_50_SC, diff_percentile25_50_DC))
print('t-test: p values comparing percentile50 and percentile75 (for SC, then DC):')
print(paste(diff_percentile50_75_SC, diff_percentile50_75_DC))
print('t-test: p values comparing percentile75 and percentile95 (for SC, then DC):')
print(paste(diff_percentile75_95_SC, diff_percentile75_95_DC))
# kolmogorov-smirnov test --------------------------------------------------------
diff_intensities_median <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile25 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile5 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile75 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_intensities_percentile95 <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile5_25_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile5_25_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile5', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile25_50_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile25_50_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile25', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile50_75_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile50_75_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'median', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile75_95_SC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
diff_percentile75_95_DC <- ks.test(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef'][0:num_samples_to_test],
data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef'][0:num_samples_to_test],
alternative = "two.sided", exact = TRUE)$p.value
print('ks test: p values comparing intensities: (for percentile95, to percentile5)')
print(paste(diff_intensities_percentile95, diff_intensities_percentile95, diff_intensities_median, diff_intensities_percentile25, diff_intensities_percentile5))
print('ks test: p values comparing percentile5 and percentile25 (for SC, then DC):')
print(paste(diff_percentile5_25_SC, diff_percentile5_25_DC))
print('ks test: p values comparing percentile25 and median (for SC, then DC):')
print(paste(diff_percentile25_50_SC, diff_percentile25_50_DC))
print('ks test: p values comparing percentile50 and percentile75 (for SC, then DC):')
print(paste(diff_percentile50_75_SC, diff_percentile50_75_DC))
print('ks test: p values comparing percentile75 and percentile95 (for SC, then DC):')
print(paste(diff_percentile75_95_SC, diff_percentile75_95_DC))
# plot distributions -----------------------------------------------------------------------------------------
pdfs_DC_comparingPercentiles <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'DC', ],
aes(x=onset_coef, fill = percentile)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('Double cropped soy') +
theme_bw()
pdfs_SC_comparingPercentiles <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC', ],
aes(x=onset_coef, fill = percentile)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('Single cropped soy') +
theme_bw()
pdfs_percentile5_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile5', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('5th percentile') +
theme_bw()
pdfs_percentile25_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile25', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('25th percentile') +
theme_bw()
pdfs_percentile50_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'median', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('50th percentile') +
theme_bw()
pdfs_percentile75_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile75', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('75th percentile') +
theme_bw()
pdfs_percentile95_comparingIntensities <- ggplot(data_bootstrap_coefs[data_bootstrap_coefs$percentile == 'percentile95', ],
aes(x=onset_coef, fill = intensity)) +
geom_histogram(bins = 100, alpha = 0.3, position="dodge") +
geom_density(alpha=.5) +
ggtitle('95th percentile') +
theme_bw()
print(pdfs_DC_comparingPercentiles)
print(pdfs_SC_comparingPercentiles)
print(pdfs_percentile5_comparingIntensities)
print(pdfs_percentile25_comparingIntensities)
print(pdfs_percentile50_comparingIntensities)
print(pdfs_percentile75_comparingIntensities)
print(pdfs_percentile95_comparingIntensities)
# t-statistic by hand for comparing 75th vs 95th percentile, SC (unequal variance) ------------------------------------
group1 <- data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile75', 'onset_coef']
group2 <- data_bootstrap_coefs[data_bootstrap_coefs$intensity == 'SC' & data_bootstrap_coefs$percentile == 'percentile95', 'onset_coef']
n1 <- length(group1)
n2 <- length(group2)
t_byhand <- (mean(group1) - mean(group2)) / sqrt(var(group1) / n1 + var(group2) / n2)
print('t test by hand to compare 75th and 95th percentile, SC, unequal variance')
print(paste('t statistic:', t_byhand))
# t-distribution ------------------------------------------------------------------------------------
t_dist_to_plot <- data.frame(t = seq(-20, 20, length = 100),
density = dt(seq(-20, 20, length = 100), df = 1998)) # degrees of freedom = n1 + n2 - 2
t_dist_plot <- ggplot(t_dist_to_plot) +
geom_line(aes(x = t, y = density)) +
ggtitle('t-distribution with df = 1998') +
theme_bw()
print(t_dist_plot)
# rename levels for plotting ---------------------------------------------------------------------------------
levels(final_bootstrap_coefs$intensity) <- c('Single cropped', 'Double cropped')
levels(final_bootstrap_coefs$percentile) <- c('5th', '25th', '50th', '75th', '95th')
onset_coef_plot <- ggplot(final_bootstrap_coefs) +
geom_point(aes(x = percentile, y = onset_coef)) +
geom_errorbar(aes(ymin=onset_coef-onset_sd, ymax=onset_coef+onset_sd, x = percentile)) +
facet_wrap(~ intensity) +
ggtitle(paste('Bootstrapped onset coefficients with', onset_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
year_coef_plot <- ggplot(final_bootstrap_coefs) +
geom_point(aes(x = percentile, y = year_coef)) +
geom_errorbar(aes(ymin=year_coef-year_sd, ymax=year_coef+year_sd, x = percentile)) +
facet_wrap(~ intensity) +
ggtitle(paste('Bootstrapped year coefficients with', onset_type)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
print(onset_coef_plot)
print(year_coef_plot)
